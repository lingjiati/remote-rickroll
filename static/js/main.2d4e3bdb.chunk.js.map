{"version":3,"sources":["rickroll.mp3","App.js","reportWebVitals.js","index.js"],"names":["db","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getDatabase","dbRef","ref","set","App","useState","localStorage","getItem","page","setPage","initialized","setInitialized","style","margin","onClick","raised","prompt","setItem","setTimeout","onValue","snapshot","data","val","console","log","state","document","querySelector","pause","play","disabled","src","rickroll","type","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2MAAe,MAA0B,qC,+CCuBnCA,GADMC,YAXW,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,2EACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAKEC,eACLC,EAAQC,YAAIX,EAAI,WACtBY,YAAIF,EAAO,CACT,MAAS,UA6DIG,MArDf,WACE,MAAwBC,mBAASC,aAAaC,QAAQ,UAAY,WAAa,UAA/E,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAoBA,OACE,qBAAKC,MAAO,CAACC,OAAQ,QAArB,SAGY,aAATL,EAED,gCACE,cAAC,IAAD,CAAQM,QAAS,iBAAe,aAATN,GAAuBC,EAAQ,WAAWG,MAAO,CAAC,gBAAiB,OAA1F,sBAAmH,uBACnH,cAAC,IAAD,CAAQE,QA3BE,kBAAMX,YAAIF,EAAO,CAC/B,MAAS,UA0BqBc,QAAM,EAAhC,mCACA,cAAC,IAAD,CAAQD,QAzBG,kBAAMX,YAAIF,EAAO,CAChC,MAAS,WAwBsBc,QAAM,EAACH,MAAO,CAAC,cAAe,OAAzD,qCAGF,gCACE,cAAC,IAAD,CAAQE,QAAS,WACR,WAATN,IAAsBF,aAAaC,QAAQ,WAA0B,oBAAbS,WAAmCP,EAAQ,YACnGH,aAAaW,QAAQ,SAAU,aAE9BL,MAAO,CAAC,gBAAiB,OAJ1B,oBAIiD,wBAC/CF,GAAe,cAAC,IAAD,CAAQI,QA/B/B,WACEI,YAAW,kBAAMP,GAAe,KAAO,KACvCQ,YAAQlB,GAAO,SAACmB,GAEd,IAAMC,EAAOD,EAASE,MACtBC,QAAQC,IAAI,KACK,SAAdH,EAAKI,MAAkBC,SAASC,cAAc,SAASC,SAExDF,SAASC,cAAc,SAASE,OAChCN,QAAQC,IAAI,WAsBmCT,QAAM,EAApC,+BAChBL,GAAe,cAAC,IAAD,CAAQoB,UAAQ,EAACf,QAAM,EAAvB,yBAChB,gCACC,wBAAQgB,IAAKC,EAAUC,KAAK,aAAaC,GAAG,kBCjEtCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,SAM1BZ,M","file":"static/js/main.2d4e3bdb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rickroll.9ea6b6fd.mp3\";","import rickroll from './rickroll.mp3';\nimport './App.css';\nimport {useState} from 'react';\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, set, ref, onValue } from \"firebase/database\";\nimport {Button} from '@rmwc/button'\nimport '@rmwc/button/styles';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC3hbDjJP4WlbIUTs3P4D2GPW7teRkofbM\",\n  authDomain: \"rickroll-e37a1.firebaseapp.com\",\n  databaseURL: \"https://rickroll-e37a1-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"rickroll-e37a1\",\n  storageBucket: \"rickroll-e37a1.appspot.com\",\n  messagingSenderId: \"557345821992\",\n  appId: \"1:557345821992:web:4a8246159f298f175b6c1d\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getDatabase();\nconst dbRef = ref(db, 'enabled')\nset(dbRef, {\n  'state': 'false'\n})\n\n/*set(dbRef, {\n  'state': 'false'\n});*/\n\n\nfunction App() {\n  const [page, setPage] = useState(localStorage.getItem('authed') ? 'terminal' : 'client')\n  const [initialized, setInitialized] = useState(false)\n  const setPlay = () => set(dbRef, {\n    'state': 'true'\n  })\n  const setPause = () => set(dbRef, {\n    'state': 'false'\n  })\n  function handleClick(){\n    setTimeout(() => setInitialized(true), 500)\n    onValue(dbRef, (snapshot) => {\n      \n      const data = snapshot.val();\n      console.log('h')\n      if(data.state == \"false\") document.querySelector('audio').pause()\n      else {\n        document.querySelector('audio').play();\n        console.log('hi')\n      }\n    });\n  }\n  return (\n    <div style={{margin: '16px'}}>\n     \n      \n      {page === \"terminal\" ? \n       \n      <div>\n        <Button onClick={() => page === \"terminal\" && setPage(\"client\")} style={{'margin-bottom': '8px'}}>Terminal</Button><br></br>\n        <Button onClick={setPlay} raised>$ SUDO RICKROLL START</Button>\n        <Button onClick={setPause} raised style={{'margin-left': '8px'}}>$ SUDO RICKROLL STOP</Button>\n      </div> \n      : \n      <div>\n        <Button onClick={() => {\n        page === \"client\" && (localStorage.getItem('authed') || prompt() === \"youknowtherules\") && setPage('terminal');\n        localStorage.setItem('authed', 'terminal')\n        \n      }} style={{'margin-bottom': '8px'}}>Client</Button><br></br>\n        {!initialized && <Button onClick={handleClick} raised>$ SUDO Initialize</Button>}\n        {initialized && <Button disabled raised>Initialized</Button>}\n        <audio>\n         <source src={rickroll} type=\"audio/mpeg\" id=\"audio\" ></source>\n         </audio>\n      </div>\n  \n      }\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
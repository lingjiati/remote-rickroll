{"version":3,"sources":["rickroll.mp3","App.js","reportWebVitals.js","index.js"],"names":["initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getDatabase","dbRef","ref","update","App","useState","localStorage","getItem","page","setPage","initialized","setInitialized","prompt","createDialogQueue","style","margin","onClick","raised","set","outlined","Date","getTime","setItem","setTimeout","onValue","snapshot","data","val","state","document","querySelector","pause","start","play","currentTime","k","Number","setInterval","console","log","clearInterval","disabled","loop","src","rickroll","type","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2MAAe,MAA0B,qC,uDCuBzCA,YAXuB,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,2EACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAKC,cACLC,EAAQC,YAAIH,EAAI,WACtBI,YAAOF,EAAO,CACZ,MAAS,UAoFIG,MA5Ef,WACE,MAAwBC,mBAASC,aAAaC,QAAQ,UAAY,WAAa,UAA/E,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACQC,EAAWC,cAAXD,OAuCR,OACE,qBAAKE,MAAO,CAACC,OAAQ,QAArB,SAGY,aAATP,EAED,gCACE,cAAC,IAAD,CAAQQ,QAAS,iBAAe,aAATR,GAAuBC,EAAQ,WAAWK,MAAO,CAAC,gBAAiB,OAAQG,QAAM,EAAxG,sBAA0H,uBAC1H,cAAC,IAAD,CAAQD,QA7CE,WACdE,YAAIjB,EAAO,CACX,MAAS,UA2CqBkB,UAAQ,EAACL,MAAO,CAAE,gBAAiB,OAA7D,mCACA,cAAC,IAAD,CAAQE,QAxCG,kBAAME,YAAIjB,EAAO,CAChC,MAAS,WAuCsBkB,UAAQ,EAACL,MAAO,CAAC,cAAe,MAAO,gBAAiB,OAAnF,kCAAwH,uBACxH,cAAC,IAAD,CAAQE,QArCE,kBAAMb,YAAOF,EAAO,CAClC,MAAS,OACT,OAAU,IAAImB,MAAQC,UAAY,OAmCJF,UAAQ,EAAlC,qCAGF,gCACE,cAAC,IAAD,CAAQH,QAAS,WACR,WAATR,IAAsBF,aAAaC,QAAQ,WAA0B,oBAAbK,OAAoCH,EAAQ,aAAeH,aAAagB,QAAQ,SAAU,cAGjJR,MAAO,CAAC,gBAAiB,OAAQG,QAAM,EAJxC,oBAIwD,wBACtDP,GAAe,cAAC,IAAD,CAAQM,QAzC/B,WAEEO,YAAW,kBAAMZ,GAAe,KAAO,KACvCa,YAAQvB,GAAO,SAACwB,GACd,GAAY,WAATjB,EAAH,CACA,IAAMkB,EAAOD,EAASE,MAEpB,GAAkB,UAAfD,EAAKE,MAAmB,OAAOC,SAASC,cAAc,SAASC,QAClE,IAAIL,EAAKM,MAAO,OAAOH,SAASC,cAAc,SAASG,OACvDJ,SAASC,cAAc,SAASI,YAAc,EAC9C,IAAIC,EAAIC,OAAOV,EAAKM,OAChB9B,EAAMmC,aAAY,WACpBC,QAAQC,IAAI,WAAY,IAAInB,MAAQC,UAAWc,IAC3C,IAAIf,MAAQC,UAAYc,EAAI,MAC5B,IAAIf,MAAQC,UAAYc,IAAIN,SAASC,cAAc,SAASG,OAChEO,cAActC,MACb,SAyB4CiB,UAAQ,EAAtC,+BAChBT,GAAe,cAAC,IAAD,CAAQ+B,UAAQ,EAACtB,UAAQ,EAAzB,yBAChB,uBAAOuB,MAAI,EAAX,SACC,wBAAQC,IAAKC,EAAUC,KAAK,aAAaC,GAAG,kBCvFtCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAAS8B,eAAe,SAM1BZ,M","file":"static/js/main.57ff6b74.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rickroll.9ea6b6fd.mp3\";","import rickroll from './rickroll.mp3';\nimport './App.css';\nimport {useState} from 'react';\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, onValue, update, set } from \"firebase/database\";\nimport {Button} from '@rmwc/button'\nimport {createDialogQueue} from '@rmwc/dialog'\nimport '@rmwc/button/styles';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC3hbDjJP4WlbIUTs3P4D2GPW7teRkofbM\",\n  authDomain: \"rickroll-e37a1.firebaseapp.com\",\n  databaseURL: \"https://rickroll-e37a1-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"rickroll-e37a1\",\n  storageBucket: \"rickroll-e37a1.appspot.com\",\n  messagingSenderId: \"557345821992\",\n  appId: \"1:557345821992:web:4a8246159f298f175b6c1d\"\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\nconst db = getDatabase();\nconst dbRef = ref(db, 'enabled')\nupdate(dbRef, {\n  'state': 'false'\n})\n\n/*set(dbRef, {\n  'state': 'false'\n});*/\n\n\nfunction App() {\n  const [page, setPage] = useState(localStorage.getItem('authed') ? 'terminal' : 'client')\n  const [initialized, setInitialized] = useState(false)\n  const { prompt } = createDialogQueue();\n  \n  const setPlay = () => {\n    set(dbRef, {\n    'state': 'true',\n    \n    })\n  }\n  const setPause = () => set(dbRef, {\n    'state': 'false'\n  })\n\n  const setSync = () => update(dbRef, {\n    'state': 'true',\n    'start': (new Date()).getTime() + 2000\n  })\n  \n  function handleClick(){\n    \n    setTimeout(() => setInitialized(true), 500)\n    onValue(dbRef, (snapshot) => {\n      if(page !== \"client\") return;\n      const data = snapshot.val();\n      \n        if(data.state === \"false\") return document.querySelector('audio').pause()\n        if(!data.start) return document.querySelector('audio').play();\n        document.querySelector('audio').currentTime = 0;\n        let k = Number(data.start)\n        let ref = setInterval(() => {\n          console.log('pending', (new Date()).getTime(), k)\n          if((new Date()).getTime() - k > 100) return;\n          if((new Date()).getTime() > k) {document.querySelector('audio').play();\n          clearInterval(ref)}\n        }, 10)\n\n\n      \n    });\n  }\n  return (\n    <div style={{margin: '16px'}}>\n     \n      \n      {page === \"terminal\" ? \n       \n      <div>\n        <Button onClick={() => page === \"terminal\" && setPage(\"client\")} style={{'margin-bottom': '8px'}} raised>Terminal</Button><br></br>\n        <Button onClick={setPlay} outlined style={{ 'margin-bottom': '8px'}}>$ SUDO RICKROLL START</Button>\n        <Button onClick={setPause} outlined style={{'margin-left': '8px', 'margin-bottom': '8px'}}>$ SUDO RICKROLL STOP</Button><br></br>\n        <Button onClick={setSync} outlined >$ SUDO RICKROLL SYNC</Button>\n      </div> \n      : \n      <div>\n        <Button onClick={() => {\n        page === \"client\" && (localStorage.getItem('authed') || prompt() === \"youknowtherules\") && (setPage('terminal') || localStorage.setItem('authed', 'terminal'));\n        \n        \n      }} style={{'margin-bottom': '8px'}} raised>Client</Button><br></br>\n        {!initialized && <Button onClick={handleClick} outlined>$ SUDO Initialize</Button>}\n        {initialized && <Button disabled outlined>Initialized</Button>}\n        <audio loop>\n         <source src={rickroll} type=\"audio/mpeg\" id=\"audio\" ></source>\n         </audio>\n      </div>\n      \n  \n      }\n\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
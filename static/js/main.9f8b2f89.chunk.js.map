{"version":3,"sources":["Terminal.js","Client.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getDatabase","dbRef","ref","auth","getAuth","Terminal","useState","lights","setLights","a","signInWithEmailAndPassword","value","setAuthed","setPersistence","browserSessionPersistence","authed","setValue","useEffect","get","then","JSON","parse","stringify","update","array","i","style","display","width","flexDirection","flexWrap","use","margin","map","b","label","enhanced","options","onChange","evt","val","currentTarget","icon","alignSelf","onClick","length","console","log","trailingIcon","tabIndex","dic","Client","id","setId","data","setData","onValue","snapshot","String","Number","background","height","App","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.9f8b2f89.chunk.js","sourcesContent":["\nimport { getDatabase, ref, onValue, update, set, get } from \"firebase/database\";\nimport { initializeApp} from \"firebase/app\";\nimport 'firebase/auth';\nimport {useState, useRef, useEffect} from 'react';\nimport {Select} from '@rmwc/select'\nimport '@rmwc/select/styles'\nimport { getAuth, onAuthStateChanged, signInWithEmailAndPassword, setPersistence, browserSessionPersistence  } from 'firebase/auth';\nimport '@rmwc/textfield/styles';\nimport { TextField } from \"@rmwc/textfield\";\nimport '@rmwc/icon/styles';\nimport {Typography} from '@rmwc/typography'\nimport '@rmwc/typography/styles';\nimport {Button} from '@rmwc/button'\nimport '@rmwc/button/styles';\n\nconst app = initializeApp({\n    apiKey: \"AIzaSyDkL9MVC5911Smi58cwo9HBs7-rJjYd88w\",\n    authDomain: \"remote-lighting.firebaseapp.com\",\n    databaseURL: \"https://remote-lighting-default-rtdb.firebaseio.com\",\n    projectId: \"remote-lighting\",\n    storageBucket: \"remote-lighting.appspot.com\",\n    messagingSenderId: \"291955304057\",\n    appId: \"1:291955304057:web:ebfffb63277604dd8f16a8\",\n    measurementId: \"G-BFP5RRMLHL\"\n  });\n\nconst db = getDatabase(), dbRef = ref(db), auth = getAuth(app);\n\n\nfunction Terminal (){\n    const [lights, setLights] = useState({});\n    setPersistence(auth, browserSessionPersistence)\n    async function handler(){\n        await signInWithEmailAndPassword(auth, 'lingjiati@gmail.com', value)\n        setAuthed(true)\n    }\n    const [authed, setAuthed] = useState(false)\n    const [value, setValue] = useState('')\n    useEffect(() => get(dbRef).then((a) => setLights(JSON.parse(JSON.stringify(a)))), [])\n    useEffect(() => update(dbRef, lights), [lights])\n    var array = [];\n    for(var i in lights) array[i] = lights[i];\n    \n    return (\n    <div style={{ display: 'flex', width: '100%', flexDirection: 'column', flexWrap: 'wrap', 'justifyContent': 'space-between'}}>\n        <Typography use=\"headline6\" style={{margin: '32px 32px 8px'}}>Remote Lighting Terminal</Typography>\n        {!authed?\n        \n        <TextField onChange={evt => setValue(evt.currentTarget.value)} value={value} \n            trailingIcon={{\n            icon: 'login',\n            tabIndex: 0,\n            \n            onClick: handler }} label=\"Password\" style={{margin: '8px 32px'}}/>\n        \n        :\n        <>\n        {\n        array.map((a, b) => <Select\n            label={\"Channel \" + (b+1)}\n            enhanced\n            value={a}\n            options={['White', 'Grey', 'Dark Grey', 'Black', 'Blue', \"Red\"]}\n            key={b}\n            onChange={evt => {\n                var val = {...lights};\n                val[b] = evt.currentTarget.value;\n                setLights(val)\n            }}\n            \n        />)\n        \n        }\n        <Button label=\"Add\" icon=\"add\" style={{alignSelf: 'flex-start', margin: '8px 32px'}} onClick={() => {\n                const length = array.length;\n                var val = {...array};\n                val[length] = \"White\";\n                console.log(val)\n                setLights(val)\n            }}/>\n        </>}\n    </div>)\n    }\n\nexport default Terminal","import { getDatabase, ref, onValue, update, set, get } from \"firebase/database\";\nimport { initializeApp } from \"firebase/app\";\nimport {useState, useRef, useEffect} from 'react';\nimport {Select} from '@rmwc/select'\nimport '@rmwc/select/styles';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDkL9MVC5911Smi58cwo9HBs7-rJjYd88w\",\n    authDomain: \"remote-lighting.firebaseapp.com\",\n    databaseURL: \"https://remote-lighting-default-rtdb.firebaseio.com\",\n    projectId: \"remote-lighting\",\n    storageBucket: \"remote-lighting.appspot.com\",\n    messagingSenderId: \"291955304057\",\n    appId: \"1:291955304057:web:ebfffb63277604dd8f16a8\",\n    measurementId: \"G-BFP5RRMLHL\"\n  };\n  initializeApp(firebaseConfig);\nconst db = getDatabase(), dbRef = ref(db);\nconst dic = {\n    'Black': '#000',\n    'White': '#fff',\n    'Grey': '#bbb',\n    'Dark Grey': '#888',\n    'Red': 'Red',\n    'Blue': 'Blue'\n}\nfunction Client(){\n    const [id, setId] = useState(0);\n    const [data, setData] = useState([])\n    useEffect(() => {\n        console.log('reg')\n        onValue(dbRef, (snapshot) => {\n            let val = snapshot.val();\n            console.log(val)\n            setData(val)\n              \n                \n        })\n    }, [])\n    return (<>\n    <Select value={String(id+1)} options={data.map((a, b) => String(b+1))} enhanced onChange={evt => setId(Number(evt.currentTarget.value) - 1)}/>\n    <div style={{background: dic[data[id]], height: '200px'}}>hi</div>\n    \n    </>)\n}\n\nexport default Client;","\nimport './App.css';\nimport {useState, useRef, useEffect} from 'react';\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, onValue, update, set } from \"firebase/database\";\nimport {Button} from '@rmwc/button'\nimport {createDialogQueue} from '@rmwc/dialog'\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport '@rmwc/button/styles';\nimport Terminal from './Terminal.js'\nimport Client from './Client.js'\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDkL9MVC5911Smi58cwo9HBs7-rJjYd88w\",\n  authDomain: \"remote-lighting.firebaseapp.com\",\n  databaseURL: \"https://remote-lighting-default-rtdb.firebaseio.com\",\n  projectId: \"remote-lighting\",\n  storageBucket: \"remote-lighting.appspot.com\",\n  messagingSenderId: \"291955304057\",\n  appId: \"1:291955304057:web:ebfffb63277604dd8f16a8\",\n  measurementId: \"G-BFP5RRMLHL\"\n};\n\n\n\nfunction App() {\n  return (\n    <>\n      \n<Link to=\"/terminal\">hi</Link>\n<Link to=\"/client\">hi</Link>\n    </>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Terminal from './Terminal.js'\nimport Client from './Client.js'\n\nReactDOM.render(\n  \n  <BrowserRouter>\n  <Routes>\n    <Route path=\"/\" element={<App />} />\n      <Route path=\"/terminal\" element={<Terminal />} />\n      <Route path=\"/client\" element={<Client />} />\n  </Routes>\n</BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["rickroll.mp3","App.js","reportWebVitals.js","index.js"],"names":["initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getDatabase","dbRef","ref","update","App","useState","page","setPage","initialized","setInitialized","useEffect","onValue","snapshot","data","val","restart","audio","current","currentTime","mute","muted","state","pause","play","localStorage","getItem","useRef","style","margin","onClick","raised","set","outlined","prompt","setItem","setTimeout","disabled","loop","src","rickroll","type","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kMAAe,MAA0B,qC,+CCuBzCA,YAXuB,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,2EACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAKC,cACLC,EAAQC,YAAIH,EAAI,WACtBI,YAAOF,EAAO,CACZ,MAAS,UA8FIG,MAtFf,WACE,MAAwBC,mBAAS,UAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACAC,qBAAU,kBAAMC,YAAQV,GAAO,SAACW,GAC9B,IAAMC,EAAOD,EAASE,MACpB,OAAGD,EAAKE,QAAgBC,EAAMC,UAAYD,EAAMC,QAAQC,YAAc,IACrD,SAAdL,EAAKM,MAAiBH,EAAMC,UAAYD,EAAMC,QAAQG,OAAQ,GAChD,UAAdP,EAAKM,MAAkBH,EAAMC,UAAYD,EAAMC,QAAQG,OAAQ,GAChD,UAAfP,EAAKQ,MAA0BL,EAAMC,SAAWD,EAAMC,QAAQK,QAC1DN,EAAMC,SAAWD,EAAMC,QAAQM,aAItC,CAACf,IAEDgB,aAAaC,QAAQ,WAAqB,WAARnB,GAAkBC,EAAQ,UAChE,IAAMS,EAAQU,mBA4Bd,OACE,qBAAKC,MAAO,CAACC,OAAQ,QAArB,SAGY,aAATtB,EAGD,gCACE,cAAC,IAAD,CAAQuB,QAAS,iBAAe,aAATvB,GAAuBC,EAAQ,WAAWoB,MAAO,CAAC,aAAgB,OAAQG,QAAM,EAAvG,sBAAyH,uBACzH,cAAC,IAAD,CAAQD,QApCE,WACdE,YAAI9B,EAAO,CACX,MAAS,UAkCqB+B,UAAQ,EAACL,MAAO,CAAE,aAAgB,OAA5D,mBACA,cAAC,IAAD,CAAQE,QA/BG,kBAAME,YAAI9B,EAAO,CAChC,MAAS,WA8BsB+B,UAAQ,EAACL,MAAO,CAAC,WAAc,MAAO,aAAgB,OAAjF,kBAAsG,uBACtG,cAAC,IAAD,CAAQE,QA5BE,kBAAM1B,YAAOF,EAAO,CAClC,MAAS,OACT,QAAW,UA0BmB+B,UAAQ,EAAlC,qBACA,cAAC,IAAD,CAAQH,QAxBE,kBAAM1B,YAAOF,EAAO,CAClC,KAAQ,UAuBsB+B,UAAQ,EAACL,MAAO,CAAC,WAAc,OAAzD,kBACA,cAAC,IAAD,CAAQE,QArBI,kBAAM1B,YAAOF,EAAO,CACpC,KAAQ,WAoBwB+B,UAAQ,EAACL,MAAO,CAAC,WAAc,OAA3D,uBAGF,gCACE,cAAC,IAAD,CAAQE,QAAS,WAEL,WAATvB,IAAsBkB,aAAaC,QAAQ,WAA0B,MAAbQ,WACzDT,aAAaU,QAAQ,SAAU,YAC/B3B,EAAQ,cAIToB,MAAO,CAAC,aAAgB,OAAQG,QAAM,EARvC,oBAQuD,wBACrDtB,GAAe,cAAC,IAAD,CAAQqB,QA9B/B,WAEEM,YAAW,kBAAM1B,GAAe,KAAO,MA4BYuB,UAAQ,EAAtC,+BAChBxB,GAAe,cAAC,IAAD,CAAQ4B,UAAQ,EAACJ,UAAQ,EAAzB,yBAChB,uBAAOK,MAAI,EAACnC,IAAKc,EAAjB,SACC,wBAAQsB,IAAKC,EAAUC,KAAK,aAAaC,GAAG,kBCjGtCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.40cfac4d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rickroll.101b949c.mp3\";","import rickroll from './rickroll.mp3';\nimport './App.css';\nimport {useState, useRef, useEffect} from 'react';\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, onValue, update, set } from \"firebase/database\";\nimport {Button} from '@rmwc/button'\nimport {createDialogQueue} from '@rmwc/dialog'\nimport '@rmwc/button/styles';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC3hbDjJP4WlbIUTs3P4D2GPW7teRkofbM\",\n  authDomain: \"rickroll-e37a1.firebaseapp.com\",\n  databaseURL: \"https://rickroll-e37a1-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"rickroll-e37a1\",\n  storageBucket: \"rickroll-e37a1.appspot.com\",\n  messagingSenderId: \"557345821992\",\n  appId: \"1:557345821992:web:4a8246159f298f175b6c1d\"\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\nconst db = getDatabase();\nconst dbRef = ref(db, 'enabled')\nupdate(dbRef, {\n  'state': 'false'\n})\n\n/*set(dbRef, {\n  'state': 'false'\n});*/\n\n\nfunction App() {\n  const [page, setPage] = useState('client')\n  \n  const [initialized, setInitialized] = useState(false)\n  useEffect(() => onValue(dbRef, (snapshot) => {\n    const data = snapshot.val();\n      if(data.restart) return audio.current && (audio.current.currentTime = 0);\n      if(data.mute === \"true\") audio.current && (audio.current.muted = true)\n      if(data.mute === \"false\") audio.current && (audio.current.muted = false)\n      if(data.state === \"false\") return audio.current && audio.current.pause()\n      return audio.current && audio.current.play();\n      \n\n    \n  }), [initialized])\n\n  if(!localStorage.getItem('authed') && page!== \"client\") setPage('client');\n  const audio = useRef()\n  const setPlay = () => {\n    set(dbRef, {\n    'state': 'true',\n    \n    })\n  }\n  const setPause = () => set(dbRef, {\n    'state': 'false'\n  })\n\n  const setSync = () => update(dbRef, {\n    'state': 'true',\n    'restart': 'true'\n  })\n  \n  const setMute = () => update(dbRef, {\n    'mute': 'true'\n  })\n\n  const setUnMute = () => update(dbRef, {\n    'mute': 'false'\n  })\n  \n  function handleClick(){\n    \n    setTimeout(() => setInitialized(true), 500)\n  }\n  return (\n    <div style={{margin: '16px'}}>\n     \n      \n      {page === \"terminal\" ? \n     \n       \n      <div>\n        <Button onClick={() => page === \"terminal\" && setPage(\"client\")} style={{'marginBottom': '8px'}} raised>Terminal</Button><br></br>\n        <Button onClick={setPlay} outlined style={{ 'marginBottom': '8px'}}>start</Button>\n        <Button onClick={setPause} outlined style={{'marginLeft': '8px', 'marginBottom': '8px'}}>stop</Button><br></br>\n        <Button onClick={setSync} outlined >restart</Button>\n        <Button onClick={setMute} outlined style={{'marginLeft': '8px'}}>mute</Button>\n        <Button onClick={setUnMute} outlined style={{'marginLeft': '8px'}}>unmute</Button>\n      </div> \n      : \n      <div>\n        <Button onClick={() => {\n          \n        if(page === \"client\" && (localStorage.getItem('authed') || prompt() === 'a')) {\n          localStorage.setItem('authed', 'terminal');\n          setPage('terminal')\n          }\n        \n        \n      }} style={{'marginBottom': '8px'}} raised>Client</Button><br></br>\n        {!initialized && <Button onClick={handleClick} outlined>$ SUDO Initialize</Button>}\n        {initialized && <Button disabled outlined>Initialized</Button>}\n        <audio loop ref={audio}>\n         <source src={rickroll} type=\"audio/mpeg\" id=\"audio\" ></source>\n         </audio>\n      </div>\n      \n  \n      }\n\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
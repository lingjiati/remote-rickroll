{"version":3,"sources":["rickroll.mp3","App.js","reportWebVitals.js","index.js"],"names":["initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getDatabase","dbRef","ref","update","App","useState","localStorage","getItem","page","setPage","initialized","setInitialized","audio","useRef","style","margin","onClick","prompt","setItem","raised","setTimeout","onValue","snapshot","console","log","data","val","restart","current","currentTime","mute","muted","state","pause","play","outlined","disabled","set","loop","src","rickroll","type","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kMAAe,MAA0B,qC,+CCuBzCA,YAXuB,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,2EACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAKC,cACLC,EAAQC,YAAIH,EAAI,WACtBI,YAAOF,EAAO,CACZ,MAAS,UAgGIG,MAxFf,WACE,MAAwBC,mBAASC,aAAaC,QAAQ,UAAW,WAAW,UAA5E,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAcMC,EAAQC,mBA6Bd,OACE,sBAAKC,MAAO,CAACC,OAAQ,QAArB,UACE,cAAC,IAAD,CAAQC,QAAS,WAED,WAATR,IAAsBF,aAAaC,QAAQ,WAA0B,MAAbU,WACzDX,aAAaY,QAAQ,SAAU,YAC/BT,EAAQ,cAITK,MAAO,CAAC,aAAgB,OAAQK,QAAM,EAR3C,SAQsD,aAATX,EAAsB,aAAe,iBAAwB,wBACtGE,GAAe,cAAC,IAAD,CAAQM,QAhB/B,WAEEI,YAAW,kBAAMT,GAAe,KAAO,KAvClBU,YAAQpB,GAAO,SAACqB,GACrCC,QAAQC,IAAI,cACZ,IAAMC,EAAOH,EAASI,MACpB,OAAGD,EAAKE,QAAgBf,EAAMgB,UAAYhB,EAAMgB,QAAQC,YAAc,IACrD,SAAdJ,EAAKK,MAAiBlB,EAAMgB,UAAYhB,EAAMgB,QAAQG,OAAQ,GAChD,UAAdN,EAAKK,MAAkBlB,EAAMgB,UAAYhB,EAAMgB,QAAQG,OAAQ,GAChD,UAAfN,EAAKO,MAA0BpB,EAAMgB,SAAWhB,EAAMgB,QAAQK,QAC1DrB,EAAMgB,SAAWhB,EAAMgB,QAAQM,YA8CWC,UAAQ,EAAtC,+BAChBzB,GAAe,cAAC,IAAD,CAAQ0B,UAAQ,EAACD,UAAQ,EAAzB,yBACnB,cAAC,IAAD,CAAQnB,QAzCK,WACdqB,YAAIpC,EAAO,CACX,MAAS,UAuCkBkC,UAAQ,EAACrB,MAAO,CAAC,OAAU,OAArD,mBACG,cAAC,IAAD,CAAQE,QApCG,kBAAMqB,YAAIpC,EAAO,CAChC,MAAS,WAmCsBkC,UAAQ,EAACrB,MAAO,CAAC,OAAU,OAAtD,kBACA,cAAC,IAAD,CAAQE,QAjCE,kBAAMb,YAAOF,EAAO,CAClC,MAAS,OACT,QAAW,UA+BmBkC,UAAQ,EAACrB,MAAO,CAAC,OAAU,OAArD,qBAKO,YAARN,GAAsB,gCAErB,cAAC,IAAD,CAAQQ,QAnCE,kBAAMb,YAAOF,EAAO,CAClC,KAAQ,UAkCsBkC,UAAQ,EAACrB,MAAO,CAAC,WAAc,OAAzD,kBACA,cAAC,IAAD,CAAQE,QAhCI,kBAAMb,YAAOF,EAAO,CACpC,KAAQ,WA+BwBkC,UAAQ,EAACrB,MAAO,CAAC,WAAc,OAA3D,uBAGF,8BAIE,uBAAOwB,MAAI,EAACpC,IAAKU,EAAjB,SACC,wBAAQ2B,IAAKC,EAAUC,KAAK,aAAaC,GAAG,kBCpGtCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.74192884.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rickroll.101b949c.mp3\";","import rickroll from './rickroll.mp3';\nimport './App.css';\nimport {useState, useRef, useEffect} from 'react';\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, onValue, update, set } from \"firebase/database\";\nimport {Button} from '@rmwc/button'\nimport {createDialogQueue} from '@rmwc/dialog'\nimport '@rmwc/button/styles';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC3hbDjJP4WlbIUTs3P4D2GPW7teRkofbM\",\n  authDomain: \"rickroll-e37a1.firebaseapp.com\",\n  databaseURL: \"https://rickroll-e37a1-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"rickroll-e37a1\",\n  storageBucket: \"rickroll-e37a1.appspot.com\",\n  messagingSenderId: \"557345821992\",\n  appId: \"1:557345821992:web:4a8246159f298f175b6c1d\"\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\nconst db = getDatabase();\nconst dbRef = ref(db, 'enabled')\nupdate(dbRef, {\n  'state': 'false'\n})\n\n/*set(dbRef, {\n  'state': 'false'\n});*/\n\n\nfunction App() {\n  const [page, setPage] = useState(localStorage.getItem('authhh')? 'terminal':'client')\n  \n  const [initialized, setInitialized] = useState(false)\n  const register = () => onValue(dbRef, (snapshot) => {\n    console.log('registered')\n    const data = snapshot.val();\n      if(data.restart) return audio.current && (audio.current.currentTime = 0);\n      if(data.mute === \"true\") audio.current && (audio.current.muted = true)\n      if(data.mute === \"false\") audio.current && (audio.current.muted = false)\n      if(data.state === \"false\") return audio.current && audio.current.pause()\n      return audio.current && audio.current.play();\n      \n\n    \n  })\n\n  const audio = useRef()\n  const setPlay = () => {\n    set(dbRef, {\n    'state': 'true',\n    \n    })\n  }\n  const setPause = () => set(dbRef, {\n    'state': 'false'\n  })\n\n  const setSync = () => update(dbRef, {\n    'state': 'true',\n    'restart': 'true'\n  })\n  \n  const setMute = () => update(dbRef, {\n    'mute': 'true'\n  })\n\n  const setUnMute = () => update(dbRef, {\n    'mute': 'false'\n  })\n  \n  function handleClick(){\n    \n    setTimeout(() => setInitialized(true), 500)\n    register()\n  }\n  return (\n    <div style={{margin: '16px'}}>\n      <Button onClick={() => {\n          \n          if(page === \"client\" && (localStorage.getItem('authhh') || prompt() === 'a')) {\n            localStorage.setItem('authhh', 'terminal');\n            setPage('terminal')\n            }\n          \n          \n        }} style={{'marginBottom': '8px'}} raised>{page === 'terminal' ? 'Authorized' : 'Unauthorized'}</Button><br></br>\n        {!initialized && <Button onClick={handleClick} outlined>Initialize Client</Button>}\n        {initialized && <Button disabled outlined>Initialized</Button>}\n     <Button onClick={setPlay} outlined style={{'margin': '8px'}}>start</Button>\n        <Button onClick={setPause} outlined style={{'margin': '8px'}}>stop</Button>\n        <Button onClick={setSync} outlined style={{'margin': '8px'}}>restart</Button>\n      \n\n     \n       \n      {page == 'terminal' && <div>\n        \n        <Button onClick={setMute} outlined style={{'marginLeft': '8px'}}>mute</Button>\n        <Button onClick={setUnMute} outlined style={{'marginLeft': '8px'}}>unmute</Button>\n      </div> }\n\n      <div>\n        \n        \n        \n        <audio loop ref={audio}>\n         <source src={rickroll} type=\"audio/mpeg\" id=\"audio\" ></source>\n        </audio>\n      </div>\n      \n  \n\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
